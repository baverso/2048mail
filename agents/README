Below is an index of all the agents we've defined, along with their inputs and outputs, followed by an analysis on potential optimizations for LangChain implementation.

1.	EMAIL_SUMMARIZER
	•	Inputs:
	•	{email_content}: The raw text content of the email to be summarized.
	•	Output:
		•	A JSON object with the following keys:
		•	"from": Sender's name (and optionally organization).
		•	"subject": Email subject line.
		•	"date": Date when the email was sent.
		•	"key_points": An array summarizing the main points of the email.
		•	"requests_action_items": An array listing any explicit requests or action items.
		•	"context" (optional): Brief context if the email is part of a thread.
		•	"sentiment": A brief sentiment analysis (e.g., "Positive", "Neutral").
2.	EMAIL_NEEDS_RESPONSE
	•	Inputs:
	•	{email_summary}: A structured email summary (including fields like from, subject, key points, requests, context, and sentiment) as generated by the EMAIL_SUMMARIZER.
	•	Output:
		•	A JSON object with a single key "needs_response" whose value is either:
		•	"respond" – indicating a response is needed.
		•	"no response needed" – indicating no action is required.
3.	EMAIL_CATEGORIZER
	•	Inputs:
	•	{email_content}: The raw text content of the email to be categorized.
	•	Output:
		•	A JSON object with a single key "decision" whose value is either:
		•	"move forward" – indicating the email should be pursued.
		•	"decline" – indicating it should be declined.
4.	DECLINE_WRITER
	•	Inputs:
	•	{email_content}: The raw text content of the email that requires a decline response.
	•	Output:
		•	A freeform email body (plain text) that:
		•	Expresses appreciation.
		•	Politely and clearly declines the request.
		•	Optionally leaves the door open for future opportunities.
		•	Ends with a specific signature block that includes "Thank you," followed by "Andrew," the AI assistant attribution, 10 blank lines, and a detailed disclaimer.
5.	SCHEDULE_EMAIL_WRITER
	•	Inputs:
	•	{email_content}: The raw text content of the email with a meeting request.
	•	Output:
		•	A freeform email body (plain text) that:
		•	Responds based on one of four predefined scenarios (e.g., sender proposes a time but I'm unavailable, no time zone provided, no specific time suggested, or broad availability).
		•	Includes the exact scheduling link: https://meetings.hubspot.com/andrew-satz/evqlv-aiemail
		•	Ends with the same signature block as above.
6.	EMAIL_EDITOR_AGENT
	•	Inputs:
	•	{draft_email}: The AI-generated draft email (raw text).
	•	{edited_email}: The user-modified (edited) version of the draft (raw text).
	•	Output:
		•	A JSON object with the following structure:
		•	"changes_summary": A brief overview of the types of changes made.
		•	"specific_changes": An array of specific changes identified, each with type, original text, edited text, and likely reason.
		•	"inferred_preferences": An array of preferences that can be inferred from the edits.
		•	"recommendations": Actionable recommendations for future email drafting based on the analysis.
7.	EMAIL_WRITER
	•	Inputs:
	•	{email_content}: The raw text content of the incoming email.
	•	Output:
		•	A freeform email response (plain text) that fully addresses the sender's request. The response is tailored based on the email's intent and category and may include a meeting scheduling link if applicable.
		•	The email response must follow a professional format and end with the standard signature block (identical to the ones used in DECLINE_WRITER and SCHEDULE_EMAIL_WRITER).
8.  MEETING_REQUEST_DECISION_MAKER
	•	Inputs:
	•	{email_content}: The raw text content of the incoming email.
	•	Output:
		•	A JSON object with a single key "decision" whose value is either:
		•	"schedule meeting" – indicating the email is solely a meeting request.
		•	"other email" – indicating it contains topics beyond just scheduling a meeting.

